<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QXdueAAAAABJRU5ErkJggg==
</value>
  </data>
</root>